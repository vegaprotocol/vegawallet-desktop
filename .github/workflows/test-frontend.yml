name: Test frontend

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  cypress-run:
    name: Run end-to-end tests
    runs-on: macos-latest
    env:
      GO111MODULE: on # Needed by Wails
      CGO_ENABLED: 1 # Needed by Wails
      WAILS_VERSION: v2.4.1
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go ^1.19
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19

      - name: Restore go modules from cache
        uses: actions/cache@v3
        with:
          path: |
            ~/go/pkg/mod
            ~/go/bin
            ~/.cache/go-build
          key: ${{ runner.os }}-wails-${{ env.WAILS_VERSION }}-go-${{ hashFiles('**/go.sum') }}

      - name: Get backend dependencies
        run: go get -v -t -d ./...

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

      - name: Set up Node ^18.12
        uses: actions/setup-node@v3
        with:
          node-version: 18.12
          cache: 'yarn'
          cache-dependency-path: 'frontend/yarn.lock'

      - name: Install dependencies
        run: yarn install --frozen-lockfile
        working-directory: frontend

      - name: Install playwright dependencies
        run: yarn playwright install-deps chromium

      # Run cypress in this process and run all Cypress tests
      - name: Run e2e tests
        run: yarn test:e2e
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  sanity-checks:
    name: Run sanity checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node 18.12
        uses: actions/setup-node@v3
        with:
          node-version: 18.12
        id: npm

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: 'frontend/node_modules'
          key: node_modules-${{ hashFiles('frontend/yarn.lock') }}

      - name: Install dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      - name: Build frontend
        working-directory: frontend
        run: yarn build
        env:
          VITE_COVERAGE: "true"

      - name: Check lint
        working-directory: frontend
        run: yarn lint:check

      - name: Check formatting
        working-directory: frontend
        run: yarn format:check
