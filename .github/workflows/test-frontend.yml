name: Test frontend

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop
  workflow_dispatch:

jobs:
  cypress-run:
    name: Run end-to-end tests
    runs-on: macos-latest
    env:
      GO111MODULE: on # Needed by Wails
      CGO_ENABLED: 1 # Needed by Wails
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Go ^1.19
        uses: actions/setup-go@v2
        with:
          go-version: ^1.19
        id: go

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@v2.2.0

      - name: Get backend dependencies
        run: go get -v -t -d ./...

      - name: Set up Node ^18.12
        id: Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.12

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install frontend dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      # Start wails in the first process
      - name: Start backend in background
        run: wails dev -noreload &
        env:
          VITE_COVERAGE: "true"
          VITE_FEATURE_NETWORK_WARNING: "false"
          VITE_FEATURE_TELEMETRY_CHECK: "false"


      # Run cypress in this process
      # Install yarn automation/ dependencies, cache them correctly
      # and run all Cypress tests
      - name: Cypress run
        uses: cypress-io/github-action@v4
        with:
          wait-on: "http://localhost:34115"
          working-directory: frontend/automation
          wait-on-timeout: 220
          record: true
        env:
          # pass the Dashboard record key as an environment variable
          CYPRESS_RECORD_KEY: ${{ secrets.CYPRESS_RECORD_KEY }}
          # Recommended: pass the GitHub token lets this action correctly
          # determine the unique run id necessary to re-run the checks
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # pass the project ID from the secrets through environment variable
          CYPRESS_PROJECT_ID: ${{ secrets.PROJECT_ID }}
          CYPRESS_ENV: localhost

      - uses: actions/upload-artifact@v2
        if: ${{ always() }}
        with:
          name: coverage
          path: frontend/automation/coverage

  jest-run:
    name: Run unit tests
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up Node.js 18
        id: Node
        uses: actions/setup-node@v3
        with:
          node-version: 18.12

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      - name: Run jest
        working-directory: frontend
        run: yarn test --watchAll=false --passWithNoTests

  sanity-checks:
    name: Run sanity checks
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Set up Node 18.12
        uses: actions/setup-node@v3
        with:
          node-version: 18.12
        id: npm

      - name: Restore node_modules from cache
        uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: node_modules-${{ hashFiles('**/yarn.lock') }}

      - name: Install dependencies
        working-directory: frontend
        run: yarn install --frozen-lockfile

      - name: Build frontend
        working-directory: frontend
        run: yarn build
        env:
          VITE_COVERAGE: "true"

      - name: Check lint
        working-directory: frontend
        run: yarn lint:check

      - name: Check formatting
        working-directory: frontend
        run: yarn format:check
