name: Release binaries

on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
      - "v*" # Push events to matching v*, i.e. v1.0, v20.15.10

env:
  VITE_SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
  WAILS_VERSION: v2.4.1

jobs:
  release-macos:
    name: Release ${{ matrix.network }} on MacOS ${{ matrix.arch }}
    runs-on: macos-latest
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
        network:
          - mainnet
          - fairground
        include:
          - network: mainnet
            software-name: Vega Wallet
            filename: vega-wallet
          - network: fairground
            software-name: Fairground Wallet
            filename: fairground-wallet
          - arch: amd64
            user-friendly-arch: intel
          - arch: arm64
            user-friendly-arch: apple-silicon
    steps:
      - name: Set up Node 18.12
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.0
        id: npm

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.19
        id: go

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Prepare "${{ matrix.network }}" bundle
        shell: bash
        env:
          WALLET_OPTIMIZED_FOR: ${{ matrix.network }}
        run: ./prepare.sh

      - name: Build binary
        env:
          VITE_FEATURE_MODE: ${{ matrix.network }}
        run: wails build -clean -f -platform=darwin/${{ matrix.arch }} -tags ${{ matrix.network }}

      - name: Run tests
        if: ${{ matrix.arch == 'amd64' }}
        run: go test -v ./...

      - name: Import DeveloperID Certificate
        uses: apple-actions/import-codesign-certs@v1
        with:
          keychain: vega
          create-keychain: true
          p12-file-base64: ${{ secrets.MACOS_CERTIFICATE }}
          p12-password: ${{ secrets.MACOS_CERTIFICATE_PASS }}

      - name: Sign binary
        working-directory: build/bin
        # --timestamp
        #     During signing, requests that a timestamp authority server be contacted to authenticate the time of
        #     signing.
        # --deep
        #     When signing a bundle, specifies that nested code content such as helpers, frameworks, and plug-ins,
        #     should be recursively signed in turn.
        # --options runtime
        #     On macOS versions >= 10.14.0, opts signed processes into a hardened runtime environment which includes
        #     runtime code signing enforcement, library validation, hard, kill, and debugging restrictions.
        run: codesign --verbose --sign "${{ secrets.MACOS_CERTIFICATE_IDENTITY_ID }}" --timestamp --options runtime --deep --force "${{ matrix.software-name }}.app"

      - name: Verify signature
        working-directory: build/bin
        run: codesign --verbose --verify --strict --deep "${{ matrix.software-name }}.app"

      - name: Bundle binary for notarization
        working-directory: build/bin
        run: /usr/bin/ditto -c -k --keepParent "${{ matrix.software-name }}.app" "${{ matrix.filename }}-desktop-macos-${{ matrix.user-friendly-arch }}.zip"

      - name: Store notarization credentials
        run: |
          xcrun notarytool store-credentials vega \
            --apple-id "${{ secrets.MACOS_NOTARIZATION_APPLE_ID }}" \
            --team-id "${{ secrets.MACOS_NOTARIZATION_TEAM_ID }}" \
            --password "${{ secrets.MACOS_NOTARIZATION_PASS }}"

      - name: Notarize app
        working-directory: build/bin
        run: |
          xcrun notarytool submit "${{ matrix.filename }}-desktop-macos-${{ matrix.user-friendly-arch }}.zip" \
            --keychain-profile vega \
            --output-format json \
            --timeout "90m" \
            --wait

      - name: Staple app
        working-directory: build/bin
        run: xcrun stapler staple "${{ matrix.software-name }}.app"

      - name: Delete old archive
        working-directory: build/bin
        run: rm -rf ${{ matrix.filename }}-desktop-macos-${{ matrix.user-friendly-arch }}.zip

      - name: Bundle binary in archive for distribution
        working-directory: build/bin
        run: /usr/bin/ditto -c -k --keepParent "${{ matrix.software-name }}.app" "${{ matrix.filename }}-desktop-macos-${{ matrix.user-friendly-arch }}.zip"

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/bin/*.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-windows:
    name: Release ${{ matrix.network }} on Windows ${{ matrix.arch }}
    runs-on: windows-2019
    strategy:
      matrix:
        arch:
          - amd64
          - arm64
        network:
          - mainnet
          - fairground
        include:
          - network: mainnet
            software-name: Vega Wallet
            filename: vega-wallet
          - network: fairground
            software-name: Fairground Wallet
            filename: fairground-wallet
    steps:
      - name: Set up Node 18.12
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.0
        id: npm

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.19
        id: go

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Prepare "${{ matrix.network }}" bundle
        shell: bash
        env:
          WALLET_OPTIMIZED_FOR: ${{ matrix.network }}
        run: ./prepare.sh

      - name: Build binary
        env:
          VITE_FEATURE_MODE: ${{ matrix.network }}
        run: wails build -f -platform=windows/${{ matrix.arch }} -tags ${{ matrix.network }}

      - name: Run tests
        if: ${{ matrix.arch == 'amd64' }}
        run: go test -v ./...

      - name: Import signing certificate
        run: |
          echo "${{ secrets.WINDOWS_CERTIFICATE }}" > certificate.pfx
          Certutil -f -p "${{ secrets.WINDOWS_CERTIFICATE_PASS }}" -importpfx certificate.pfx

      - name: Sign binary
        uses: Dana-Prajea/code-sign-action@98c79121b376beab8d6a9484f445089db4461bca
        with:
          certificate: ${{ secrets.WINDOWS_CERTIFICATE }}
          password: ${{ secrets.WINDOWS_CERTIFICATE_PASS }}
          certificatesha1: ${{ secrets.WINDOWS_CERTIFICATE_HASH }}
          folder: build/bin
          timestampUrl: "http://timestamp.sectigo.com"

      - name: Bundle binary in archive
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          directory: build/bin
          filename: ${{ matrix.filename }}-desktop-windows-${{ matrix.arch }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/bin/*.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  release-linux:
    name: Release ${{ matrix.network }} on Linux ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        arch:
          - amd64
        network:
          - mainnet
          - fairground
        include:
          - network: mainnet
            software-name: Vega Wallet
            filename: vega-wallet
          - network: fairground
            software-name: Fairground Wallet
            filename: fairground-wallet
    steps:
      - name: Set up Node 18.12
        uses: actions/setup-node@v3
        with:
          node-version: 18.12.0
        id: npm

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ^1.19
        id: go

      - name: Check out repository
        uses: actions/checkout@v3

      - name: Install Wails dependencies
        run: |
          sudo apt-get update
          sudo apt-get install build-essential libgtk-3-dev libwebkit2gtk-4.0-dev

      - name: Get Wails
        run: go install github.com/wailsapp/wails/v2/cmd/wails@${{ env.WAILS_VERSION }}

      - name: Prepare "${{ matrix.network }}" bundle
        shell: bash
        env:
          WALLET_OPTIMIZED_FOR: ${{ matrix.network }}
        run: ./prepare.sh

      - name: Build binary
        env:
          VITE_FEATURE_MODE: ${{ matrix.network }}
        run: wails build -clean -f -platform=linux/${{ matrix.arch }} -tags ${{ matrix.network }}

      - name: Run tests
        if: ${{ matrix.arch == 'amd64' }}
        run: go test -v ./...

      - name: Bundle binary in archive
        uses: thedoctor0/zip-release@master
        with:
          type: zip
          directory: build/bin
          filename: ${{ matrix.filename }}-desktop-linux-${{ matrix.arch }}.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          files: build/bin/*.zip
          prerelease: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
